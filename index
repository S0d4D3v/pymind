#!/bin/python3

import src.funcs
import src.messages

import time
import sys
import webbrowser

for letter in src.messages.welcome_message :
    sys.stdout.write(letter)
    sys.stdout.flush()
    time.sleep(.02)
time.sleep(.8)
for letter in src.messages.welcome_message_2 :
    sys.stdout.write(letter)
    sys.stdout.flush()
    time.sleep(.03)
for letter in src.messages.check_man_message :
    sys.stdout.write(letter)
    sys.stdout.flush()
    time.sleep(.03)
check_man_page = str(input())
if check_man_page == "yes" or check_man_page == "YES" or check_man_page == "Yes" or check_man_page == "y" or check_man_page == "Y" :
    webbrowser.open('https://github.com/S0d4D3v/mastermind')
    time.sleep(.2)
    for letter in src.messages.check_browser_message :
        sys.stdout.write(letter)
        sys.stdout.flush()
        time.sleep(.02)
time.sleep(.5)

while True :
    while True :
        try :
            for letter in src.messages.choose_level_message :
                sys.stdout.write(letter)
                sys.stdout.flush()
                time.sleep(.03)
            level = int(input())
        except :
            continue
        else :
            break
    sys.stdout.write("\n ")
    for letter in src.messages.waiting_prompt :
        sys.stdout.write(letter)
        sys.stdout.flush()
        time.sleep(.2)
    if level == 1 :
        trials = 15
        for letter in src.messages.easy_level_selected :
            sys.stdout.write(letter)
            sys.stdout.flush()
            time.sleep(.03)
        time.sleep(.8)
        break
    elif level == 2 :
        trials = 15
        for letter in src.messages.normal_level_selected :
            sys.stdout.write(letter)
            sys.stdout.flush()
            time.sleep(.03)
        time.sleep(.8)
        break
    elif level == 3 :
        trials = 15
        for letter in src.messages.hard_level_selected :
            sys.stdout.write(letter)
            sys.stdout.flush()
            time.sleep(.03)        
        time.sleep(.8)
        break
    elif level == 4 :
        trials = 12
        for letter in src.messages.extreme_level_selected :
            sys.stdout.write(letter)
            sys.stdout.flush()
            time.sleep(.03)
        time.sleep(.8)
        break
    elif level == 5 :
        trials = 10
        for letter in src.messages.ultimate_level_selected :
            sys.stdout.write(letter)
            sys.stdout.flush()
            time.sleep(.03)
        time.sleep(.8)
        break
    else :
        for letter in src.messages.not_a_level :
            sys.stdout.write(letter)
            sys.stdout.flush()
            time.sleep(.03)
        continue

answer = src.funcs.randomize_answer(level)
current_trial = 0

while current_trial <= trials :     
    while True :
        for letter in src.messages.take_guess :
            sys.stdout.write(letter)
            sys.stdout.flush()
            time.sleep(.03)
        guess = str(input())
        if len(guess) == len(answer) :
            break
        else :
            continue
    sys.stdout.write(" |\n 0-  \033[0m")
    ans = src.funcs.check_guess(level, guess, answer)
    for letter in ans :      
        sys.stdout.write(letter)
        sys.stdout.flush()
        time.sleep(0.2)
    sys.stdout.write("\n")
    if guess[0] == answer[0] and guess[1] == answer[1] and guess[2] == answer[2] and guess[3] == answer[3] :
        time.sleep(.8)
        for letter in src.messages.win_message :
            sys.stdout.write(letter)
            sys.stdout.flush()
            time.sleep(.03)
        time.sleep(2)
        exit()
    else :
        current_trial += 1
        index = 0
time.sleep(.5)
for letter in src.messages.loose_message :
    sys.stdout.write(letter)
    sys.stdout.flush()
    time.sleep(.03)